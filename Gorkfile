require! fs
require! path

option \file, "f", "Build a specific file", "file"

command \build, "Compile egs to JavaScript", #(options, cb)
  async! cb, filename-path <- fs.realpath __filename
  let src-path = path.join(path.dirname(filename-path), "src")
  let lib-path = path.join(path.dirname(filename-path), "lib")
  async! cb, filenames <- fs.readdir src-path
  
  let mutable files = for filter file in filenames
    not r'prelude\.gs$'.test(file)
  if options.file
    let file-filter = options.file.split ","
    for file in file-filter
      if file not in files
        return cb "Cannot build unknown file: $file"
    files := for filter file in files
      file in file-filter

  if files.length == 0
    return cb("No files to build")
  
  require! gorillascript
  
  let results = {}
  let start-time = new Date().get-time()
  asyncfor next, file in files
    async! cb, text <- fs.read-file path.join(src-path, file), "utf8"
    async! cb, result <- gorillascript.compile text, { extends options, filename: file }
    results[file] := result
    next()
  console.log "Finished building after $(((new Date().get-time() - start-time) / 1000).to-fixed(3)) s"
  asyncfor next, file in files
    async! cb <- fs.write-file path.join(lib-path, file.replace r"\.gs\$", ".js"), results[file].code
    next()
  cb()
